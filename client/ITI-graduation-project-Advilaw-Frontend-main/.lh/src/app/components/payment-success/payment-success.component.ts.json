{
    "sourceFile": "src/app/components/payment-success/payment-success.component.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1752237717881,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752237729391,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,17 +44,31 @@\n \r\n     this.escrowService.confirmSessionPayment({\r\n       stripeSessionId: this.sessionId\r\n     }).subscribe({\r\n-      next: (response) => {\r\n+      next: (response: any) => {\r\n         this.isConfirming = false;\r\n         this.isConfirmed = true;\r\n-        this.paymentDetails = response.data;\r\n-        this.confirmedSessionId = response.data.sessionId;\r\n-        console.log('Payment confirmed successfully:', response);\r\n-        \r\n-        // Update payment status in localStorage for dashboard refresh\r\n-        this.updatePaymentStatus();\r\n+        console.log('Payment confirmation response:', response);\r\n+\r\n+        // Accept both { data: { sessionId } } and { sessionId }\r\n+        let sessionId: number | null = null;\r\n+        if (response && response.data && typeof response.data.sessionId !== 'undefined') {\r\n+          this.paymentDetails = response.data;\r\n+          sessionId = Number(response.data.sessionId);\r\n+        } else if (typeof response.sessionId !== 'undefined') {\r\n+          this.paymentDetails = response;\r\n+          sessionId = Number(response.sessionId);\r\n+        }\r\n+\r\n+        if (sessionId) {\r\n+          this.confirmedSessionId = sessionId;\r\n+          this.updatePaymentStatus();\r\n+          this.goToCountdown();\r\n+        } else {\r\n+          this.error = 'Payment confirmed, but no session ID was returned. Please contact support.';\r\n+          this.confirmedSessionId = null;\r\n+        }\r\n       },\r\n       error: (error) => {\r\n         console.error('Error confirming payment:', error);\r\n         this.error = 'Failed to confirm payment. Please contact support.';\r\n"
                },
                {
                    "date": 1752241166249,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n import { Component, OnInit } from '@angular/core';\r\n import { CommonModule } from '@angular/common';\r\n import { ActivatedRoute, Router } from '@angular/router';\r\n-import { EscrowService, ConfirmSessionPaymentResponse } from '../../core/services/escrow.service';\r\n-import { ApiResponse } from '../../types/ApiResponse';\r\n+import { EscrowService } from '../../core/services/escrow.service';\r\n \r\n @Component({\r\n   selector: 'app-payment-success',\r\n   standalone: true,\r\n@@ -44,31 +43,16 @@\n \r\n     this.escrowService.confirmSessionPayment({\r\n       stripeSessionId: this.sessionId\r\n     }).subscribe({\r\n-      next: (response: any) => {\r\n+      next: (response) => {\r\n         this.isConfirming = false;\r\n         this.isConfirmed = true;\r\n-        console.log('Payment confirmation response:', response);\r\n-\r\n-        // Accept both { data: { sessionId } } and { sessionId }\r\n-        let sessionId: number | null = null;\r\n-        if (response && response.data && typeof response.data.sessionId !== 'undefined') {\r\n-          this.paymentDetails = response.data;\r\n-          sessionId = Number(response.data.sessionId);\r\n-        } else if (typeof response.sessionId !== 'undefined') {\r\n-          this.paymentDetails = response;\r\n-          sessionId = Number(response.sessionId);\r\n-        }\r\n-\r\n-        if (sessionId) {\r\n-          this.confirmedSessionId = sessionId;\r\n-          this.updatePaymentStatus();\r\n-          this.goToCountdown();\r\n-        } else {\r\n-          this.error = 'Payment confirmed, but no session ID was returned. Please contact support.';\r\n-          this.confirmedSessionId = null;\r\n-        }\r\n+        this.paymentDetails = response.data;\r\n+        console.log('Payment confirmed successfully:', response);\r\n+        \r\n+        // Update payment status in localStorage for dashboard refresh\r\n+        this.updatePaymentStatus();\r\n       },\r\n       error: (error) => {\r\n         console.error('Error confirming payment:', error);\r\n         this.error = 'Failed to confirm payment. Please contact support.';\r\n"
                },
                {
                    "date": 1752241203895,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import { Component, OnInit } from '@angular/core';\r\n import { CommonModule } from '@angular/common';\r\n import { ActivatedRoute, Router } from '@angular/router';\r\n-import { EscrowService } from '../../core/services/escrow.service';\r\n+import { EscrowService, ConfirmSessionPaymentResponse } from '../../core/services/escrow.service';\r\n+import { ApiResponse } from '../../types/ApiResponse';\r\n \r\n @Component({\r\n   selector: 'app-payment-success',\r\n   standalone: true,\r\n@@ -43,16 +44,31 @@\n \r\n     this.escrowService.confirmSessionPayment({\r\n       stripeSessionId: this.sessionId\r\n     }).subscribe({\r\n-      next: (response) => {\r\n+      next: (response: any) => {\r\n         this.isConfirming = false;\r\n         this.isConfirmed = true;\r\n-        this.paymentDetails = response.data;\r\n-        console.log('Payment confirmed successfully:', response);\r\n-        \r\n-        // Update payment status in localStorage for dashboard refresh\r\n-        this.updatePaymentStatus();\r\n+        console.log('Payment confirmation response:', response);\r\n+\r\n+        // Accept both { data: { sessionId } } and { sessionId }\r\n+        let sessionId: number | null = null;\r\n+        if (response && response.data && typeof response.data.sessionId !== 'undefined') {\r\n+          this.paymentDetails = response.data;\r\n+          sessionId = Number(response.data.sessionId);\r\n+        } else if (typeof response.sessionId !== 'undefined') {\r\n+          this.paymentDetails = response;\r\n+          sessionId = Number(response.sessionId);\r\n+        }\r\n+\r\n+        if (sessionId) {\r\n+          this.confirmedSessionId = sessionId;\r\n+          this.updatePaymentStatus();\r\n+          this.goToCountdown();\r\n+        } else {\r\n+          this.error = 'Payment confirmed, but no session ID was returned. Please contact support.';\r\n+          this.confirmedSessionId = null;\r\n+        }\r\n       },\r\n       error: (error) => {\r\n         console.error('Error confirming payment:', error);\r\n         this.error = 'Failed to confirm payment. Please contact support.';\r\n"
                }
            ],
            "date": 1752237717881,
            "name": "Commit-0",
            "content": "import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { EscrowService, ConfirmSessionPaymentResponse } from '../../core/services/escrow.service';\r\nimport { ApiResponse } from '../../types/ApiResponse';\r\n\r\n@Component({\r\n  selector: 'app-payment-success',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './payment-success.component.html',\r\n  styleUrl: './payment-success.component.css'\r\n})\r\nexport class PaymentSuccessComponent implements OnInit {\r\n  sessionId: string = '';\r\n  escrowId: string = '';\r\n  confirmedSessionId: number | null = null;\r\n  isConfirming = false;\r\n  isConfirmed = false;\r\n  error = '';\r\n  paymentDetails: ConfirmSessionPaymentResponse | null = null;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private escrowService: EscrowService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // Get parameters from URL\r\n    this.sessionId = this.route.snapshot.queryParamMap.get('session_id') || '';\r\n    this.escrowId = this.route.snapshot.queryParamMap.get('escrow_id') || '';\r\n\r\n    if (this.sessionId) {\r\n      this.confirmPayment();\r\n    } else {\r\n      this.error = 'No payment session found';\r\n    }\r\n  }\r\n\r\n  confirmPayment(): void {\r\n    this.isConfirming = true;\r\n    this.error = '';\r\n\r\n    this.escrowService.confirmSessionPayment({\r\n      stripeSessionId: this.sessionId\r\n    }).subscribe({\r\n      next: (response) => {\r\n        this.isConfirming = false;\r\n        this.isConfirmed = true;\r\n        this.paymentDetails = response.data;\r\n        this.confirmedSessionId = response.data.sessionId;\r\n        console.log('Payment confirmed successfully:', response);\r\n        \r\n        // Update payment status in localStorage for dashboard refresh\r\n        this.updatePaymentStatus();\r\n      },\r\n      error: (error) => {\r\n        console.error('Error confirming payment:', error);\r\n        this.error = 'Failed to confirm payment. Please contact support.';\r\n        this.isConfirming = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  updatePaymentStatus(): void {\r\n    // Store payment confirmation in localStorage for dashboard to pick up\r\n    const paymentUpdate = {\r\n      sessionId: this.confirmedSessionId || this.sessionId,\r\n      escrowId: this.escrowId,\r\n      status: 'completed',\r\n      confirmedAt: new Date().toISOString(),\r\n      timestamp: Date.now()\r\n    };\r\n\r\n    const existingUpdates = JSON.parse(localStorage.getItem('paymentUpdates') || '[]');\r\n    existingUpdates.push(paymentUpdate);\r\n    localStorage.setItem('paymentUpdates', JSON.stringify(existingUpdates));\r\n  }\r\n\r\n  goToCountdown(): void {\r\n    if (this.confirmedSessionId) {\r\n      this.router.navigate(['/countdown'], { \r\n        queryParams: { sessionId: this.confirmedSessionId } \r\n      });\r\n    } else {\r\n      console.error('No confirmed session ID available');\r\n      this.goToDashboard();\r\n    }\r\n  }\r\n\r\n  goToDashboard(): void {\r\n    this.router.navigate(['/client/overview']);\r\n  }\r\n\r\n  goToConsultations(): void {\r\n    this.router.navigate(['/client/consults']);\r\n  }\r\n\r\n  goToPayments(): void {\r\n    this.router.navigate(['/client/payments']);\r\n  }\r\n\r\n  retryConfirmation(): void {\r\n    this.confirmPayment();\r\n  }\r\n} "
        }
    ]
}